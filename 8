import numpy as np
import matplotlib.pyplot as plt
from tensorflow.keras.applications.vgg16 import VGG16, preprocess_input
from tensorflow.keras.preprocessing.image import load_img, img_to_array
from tensorflow.keras.models import Model

base_model = VGG16()
model = Model(inputs=base_model.input, outputs=base_model.get_layer('block1_conv1').output)

img = load_img('/content/collab.webp', target_size=(224, 224))
img_array = preprocess_input(np.expand_dims(img_to_array(img), axis=0))

feature_maps = model.predict(img_array)

fig, axes = plt.subplots(4, 8, figsize=(12, 6))
for ax, fmap in zip(axes.flat, feature_maps[0, :, :, :32].transpose(2, 0, 1)):
    ax.imshow(fmap, cmap='viridis')
    ax.axis('off')
plt.show()
