import numpy as np
import pandas as pd
import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Conv1D, MaxPooling1D, Flatten, Dense
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import MinMaxScaler, LabelEncoder

data = pd.read_csv('/content/Weather_Data.csv')

data = pd.get_dummies(data)  # Convert categorical columns into numerical format
X, y = data.iloc[:, :-1].values, data.iloc[:, -1].values

scaler = MinMaxScaler()
X = scaler.fit_transform(X)

y = LabelEncoder().fit_transform(y).astype(np.float32).reshape(-1, 1)

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
X_train, X_test = X_train.reshape(-1, X_train.shape[1], 1), X_test.reshape(-1, X_test.shape[1], 1)

model = Sequential([
    Conv1D(32, 3, activation='relu', input_shape=(X_train.shape[1], 1)),
    MaxPooling1D(2), Flatten(),
    Dense(64, activation='relu'),
    Dense(1, activation='sigmoid')
])

model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])
model.fit(X_train, y_train, epochs=10, batch_size=32, validation_split=0.1)

print(f"Test Accuracy: {model.evaluate(X_test, y_test)[1]:.4f}")
